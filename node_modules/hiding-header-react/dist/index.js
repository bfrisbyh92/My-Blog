'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var hidingHeader = require('hiding-header');
var react = require('react');

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var Context = react.createContext(undefined);
var useHidingHeader = function () { return react.useContext(Context); };
var useRunHidingHeader = function () { var _a; return (_a = react.useContext(Context)) === null || _a === void 0 ? void 0 : _a.run; };
var usePauseHidingHeader = function () { var _a; return (_a = react.useContext(Context)) === null || _a === void 0 ? void 0 : _a.pause; };
var useRevealHidingHeader = function () { var _a; return (_a = react.useContext(Context)) === null || _a === void 0 ? void 0 : _a.reveal; };
var useHideHidingHeader = function () { var _a; return (_a = react.useContext(Context)) === null || _a === void 0 ? void 0 : _a.hide; };
var HidingHeader = function (_a) {
    var children = _a.children, _b = _a.className, className = _b === void 0 ? 'hidingHeader' : _b, _c = _a.innerClassName, innerClassName = _c === void 0 ? 'hidingHeader-in' : _c, _d = _a.component, Tag = _d === void 0 ? 'div' : _d, 
    // hiding-header options
    heightPropertyName = _a.heightPropertyName, boundsHeightPropertyName = _a.boundsHeightPropertyName, animationOffsetPropertyName = _a.animationOffsetPropertyName, snap = _a.snap, onHeightChange = _a.onHeightChange, onVisibleHeightChange = _a.onVisibleHeightChange, onHomeChange = _a.onHomeChange;
    var container = react.useRef(null);
    var _e = react.useState(), hidingHeaderInstance = _e[0], setHidingHeaderInstance = _e[1];
    react.useEffect(function () {
        var instance = hidingHeader.hidingHeader(container.current, {
            heightPropertyName: heightPropertyName,
            boundsHeightPropertyName: boundsHeightPropertyName,
            animationOffsetPropertyName: animationOffsetPropertyName,
            snap: snap,
            onHeightChange: onHeightChange,
            onVisibleHeightChange: onVisibleHeightChange,
            onHomeChange: onHomeChange,
        });
        setHidingHeaderInstance(instance);
    }, []);
    return (jsxRuntime.jsx(Tag, __assign({ className: className, ref: container }, { children: jsxRuntime.jsx("div", __assign({ className: innerClassName }, { children: jsxRuntime.jsx(Context.Provider, __assign({ value: hidingHeaderInstance }, { children: children }), void 0) }), void 0) }), void 0));
};

exports.HidingHeader = HidingHeader;
exports.useHideHidingHeader = useHideHidingHeader;
exports.useHidingHeader = useHidingHeader;
exports.usePauseHidingHeader = usePauseHidingHeader;
exports.useRevealHidingHeader = useRevealHidingHeader;
exports.useRunHidingHeader = useRunHidingHeader;
//# sourceMappingURL=index.js.map
